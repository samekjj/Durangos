{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "Eigenvectors\n",
    "============\n",
    "\n",
    "This week we'll be studying the idea of eigenvectors of a matrix. The physical context will be the oscillation of a pair of masses coupled by springs. See the slides for details! There are two separate implementations here:\n",
    "\n",
    "1. A VPython version (read the comments and execute the corresponding cells)\n",
    "\n",
    "2. A pylab version (again, read the comments and execute the appropriate cells)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "USE_VISUAL=False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#\n",
    "# Either use this cell, in which case you will be using VPython \n",
    "# Note: VPython only works if you have it installed on your local\n",
    "# computer. Also, stopping a VPython simulation appears to restart the kernel. Save first!\n",
    "#\n",
    "if USE_VISUAL:    \n",
    "    from vpython import *\n",
    "    from numpy import *\n",
    "    from vpython import rate\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "#\n",
    "# Or use this one, in which case you will be using pylab\n",
    "#\n",
    "\n",
    "if not USE_VISUAL:\n",
    "    %pylab inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#\n",
    "# Basic functions and definitions used by VPython and pylab versions\n",
    "#\n",
    "\n",
    "L=10\n",
    "kb=10.0\n",
    "ks=1.0\n",
    "m=1.0\n",
    "dt=0.03\n",
    "t=0.0\n",
    "\n",
    "x1i=0.4*L/10  # initial displacement from equil, m1\n",
    "v1i=0.0   # initial vel, m1\n",
    "x2i=1.0*L/10  # initial displacement from equil, m2\n",
    "v2i=0.0   # initial vel, m2\n",
    "\n",
    "s=array([x1i,v1i,x2i,v2i]) # initial state\n",
    "\n",
    "def derivs_2m(s, t):\n",
    "    x1=s[0]   # get the variables from the state\n",
    "    v1=s[1]\n",
    "    x2=s[2]\n",
    "    v2=s[3]\n",
    "    a1 = (-(kb+ks)*x1 + ks*x2)/m\n",
    "    a2 = (-(kb+ks)*x2 + ks*x1)/m\n",
    "    return array([v1, a1, v2, a2])\n",
    "    \n",
    "def RK4Step(s, dt, t, derivs):\n",
    "    \"\"\"\n",
    "    Take a single RK4 step.\n",
    "    \"\"\"\n",
    "    f1 = derivs(s, t)\n",
    "    f2 = derivs(s+f1*dt/2.0, t+dt/2.0)\n",
    "    f3 = derivs(s+f2*dt/2.0, t+dt/2.0)\n",
    "    f4 = derivs(s+f3*dt, t+dt)\n",
    "    return s + (f1+2*f2+2*f3+f4)*dt/6.0\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#\n",
    "# VPython: Simulation of 2 coupled masses on springs.\n",
    "#\n",
    "if USE_VISUAL:\n",
    "\n",
    "    canvas()\n",
    "    \n",
    "    wallLeft = box(pos=vec(-L,0,0), height=L/2, width=L/2, length=L/10, color=color.green)\n",
    "    wallRight = box(pos=vec(L,0,0), height=L/2, width=L/2, length=L/10, color=color.green)\n",
    "    \n",
    "    m1 = box(pos=vec(-L/3,0,0), height=L/5, width=L/5, length=L/5, color=color.red)\n",
    "    m2 = box(pos=vec(+L/3,0,0), height=L/5, width=L/5, length=L/5, color=color.red)\n",
    "    \n",
    "    vWall=vector(wallLeft.length/2,0,0)  # sorta like axis of wallLeft?\n",
    "    vMass=vector(m1.length/2,0,0)        # same for the masses\n",
    "    \n",
    "    s1 = helix(pos=wallLeft.pos+vWall, axis=(m1.pos-vMass)-(wallLeft.pos+vWall), radius=0.5)\n",
    "    s2 = helix(pos=m1.pos+vMass, axis=(m2.pos-vMass)-(m1.pos+vMass), radius=0.5)\n",
    "    s3 = helix(pos=m2.pos+vMass, axis=(wallRight.pos-vWall)-(m2.pos+vMass), radius=0.5)\n",
    "    \n",
    "    x10=m1.pos.x  # equilibrium pos of m1\n",
    "    x20=m2.pos.x  # equilibrium pos of m2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#\n",
    "# VPython: Simulation of 2 coupled masses on springs.\n",
    "#\n",
    "if USE_VISUAL:\n",
    "\n",
    "    def updateScreen(s):\n",
    "        x1=s[0]   # get the variables from the state\n",
    "        v1=s[1]\n",
    "        x2=s[2]\n",
    "        v2=s[3]\n",
    "    \n",
    "        m1.pos.x = x10+x1  # update mass positions\n",
    "        m2.pos.x = x20+x2\n",
    "        \n",
    "        #\n",
    "        # now just update spring positions and axes\n",
    "        #\n",
    "        \n",
    "        s1.axis = (m1.pos-vMass)-(wallLeft.pos+vWall)\n",
    "        s2.pos = m1.pos+vMass\n",
    "        s2.axis = (m2.pos-vMass)-(m1.pos+vMass)\n",
    "        s3.pos = m2.pos+vMass\n",
    "        s3.axis = (wallRight.pos-vWall)-(m2.pos+vMass)\n",
    "        \n",
    "    updateScreen(s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#\n",
    "# VPython: Simulation of 2 coupled masses on springs.\n",
    "#\n",
    "if USE_VISUAL:\n",
    "\n",
    "    while True:\n",
    "        rate(30)\n",
    "        s = RK4Step(s, dt, t, derivs_2m)\n",
    "        t += dt\n",
    "        updateScreen(s)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\ngg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10c2c4dd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if not USE_VISUAL:\n",
    "    x1list=[s[0]]\n",
    "    x2list=[s[2]]\n",
    "    tlist=[0.0]\n",
    "    t=0.0\n",
    "    \n",
    "    while t<6:\n",
    "        s = RK4Step(s, dt, t, derivs_2m)\n",
    "        t += dt\n",
    "        x1list.append(s[0])\n",
    "        x2list.append(s[2])\n",
    "        tlist.append(t)\n",
    "        \n",
    "    subplot(211)\n",
    "    ylabel(\"x1\")\n",
    "    title(\"motion of coupled masses\")\n",
    "    plot(tlist,x1list,label=\"x1\")\n",
    "    subplot(212)\n",
    "    ylabel(\"x2\")\n",
    "    xlabel(\"t\")\n",
    "    plot(tlist,x2list,label=\"x2\")\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "We can also sort out what's happening using the matrix formulation developed in the slides. The eigenvalue problem:\n",
    "\n",
    "$$\\begin{bmatrix} \\frac{(k_b+k_s)}{m} & -\\frac{k_s}{m} \\\\ -\\frac{k_s}{m} & \\frac{(k_b + k_s)}{m} \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 \\end{bmatrix}  = \\frac{k_b}{m} \\begin{bmatrix} x_1 \\\\ x_2 \\end{bmatrix} $$\n",
    "\n",
    "Has solutions:\n",
    "\n",
    "$$\\omega^2 = \\frac{k_b}{m},\\frac{k_b+2k_s}{m}$$\n",
    "\n",
    "Which corrspond to eigenvectors\n",
    "\n",
    "$$\\begin{bmatrix} x_1 \\\\ x_2 \\end{bmatrix} = \\mathinner|+\\rangle =  \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}$$\n",
    "\n",
    "or \n",
    "\n",
    "$$\\begin{bmatrix} x_1 \\\\ x_2 \\end{bmatrix} = \\mathinner|-\\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}$$\n",
    "\n",
    "The neat thing is that we can use the \"eig\" function in pylab to automaticaly find the eigenvectors and eigenvalues automatically.\n",
    "\n",
    "See the cell below for an example!\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "values: [ 12.  10.]\n",
      "vec(0): [ 0.70710678 -0.70710678]\n",
      "vec(1): [ 0.70710678  0.70710678]\n"
     ]
    }
   ],
   "source": [
    "Mat = array([[(kb+ks)/m, -ks/m],\n",
    "            [-ks/m, (kb+ks)/m]])\n",
    "\n",
    "vals, vecs = eig(Mat)\n",
    "\n",
    "print(\"values:\", vals)\n",
    "print(\"vec(0):\", vecs[:,0])\n",
    "print(\"vec(1):\", vecs[:,1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "Project 10\n",
    "===========\n",
    "\n",
    "Complete the analyss of three masses connected by springs of equal spring constant.\n",
    "\n",
    "Find the eigenvalues and eigenvectors for three masses.\n",
    "\n",
    "Use the RK4 approach as shown above to validate that the eigenvalues you compute are correct."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A => 0.572800804305\n",
      "omega**2 => 9.74989669831\n",
      "phi => -0.210947598927\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x10da2b8d0>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nLy+PJ554grKyMh577DEAhgwZwscff8zevXv51re+xVVXXcWRI0ca/rmiwCoLi8WSGhQXQ0kJVFTA\nqlXmeYL7WLx4MRUVFdx6662kp6dz5ZVXMnjwYADatGnDFVdcQfPmzWnZsiV333038+fPr7O/b33r\nW5x88smkpaVxxx13cPjwYdauXdvwzxUFVllYLJbUICcHsrMhMxMGDDDPE9zH9u3b6dKlyzHHsrKy\nADh48CA/+tGP6N69OyeffDIjR45k3759deaMPPzwwwwYMIA2bdrQpk0bysrK+PLL+BS4sMrCYrGk\nBoEAFBbC/PnmbyCQ8D46derEtm3H7rKwefNmwAz869evZ9myZezbt+/oqqJaWYRvnLRgwQIefPBB\nXnnlFfbu3cvevXtp1apV3BISrbKwWCypQyAAubmNUxQx6GPYsGFkZGTw+OOPU1lZybRp01i6dCkA\nwWCQE088kVatWrFnz55jqmiD2Xp148aNR18Hg0EyMzNp164dR44c4be//S3Bpjju68EqC4slGQkG\nYfZs84jjAGJpGJmZmUybNo0XXniBtm3b8vLLL3PllVcCcMcdd3DgwAHat2/Peeedx4QJE44597bb\nbuPll1+mXbt23H777YwbN45x48bRt29fevToQYsWLTjttNPiJrutDWWxJBvbt5tInepZaP/+8Nhj\nMHRo02bUPsHWhopMU2tDWWVhsSQLwSAsWQI/+lGNoqgmPR169IB586BzZ3fkSxBWWUTGKgsHqyws\nKU11/H9xMVRW1t6ud29YsSKpVxhWWUTGVp21WCw18f/ViiI9HXr2hKlTzd9qNm0yx6wfw9JA7MrC\nYkkGtm+HkSOhtBT69YNHH4UhQ8wKovq9TZsgI8MklGVnNz581OPYlUVkfL+yEJFxIrJGRNaJyJ21\ntLlaREpE5BMR+UeiZbRYPE0wCBMmwGefQVYWvPcejBlTowg6dzamp6eeMoqiKRnMlpTFVWUhImnA\nE8BFQDZwrYicHtamN3AnMExVzwBuT7igFotXCQZhypQaE1RpKThJXscQCMCkSWZFkZFhlEq3bomX\n1+JbMly+/hBgvaqWAojIVGAisCakzQ+AJ1W1DEBV45PLbrH4jVCndmYmiNRdgiIQgOnTa0xSEyYk\npSkqKyvruGxnS01ZkcbithmqC7Al5PVW51gofYF+IrJARBaJyEUJk85i8TKhTu2KCmNmqm/wLy01\n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\ny//fKBgFBAEA24kXG8nKA34AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d72d9b0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.optimize import curve_fit\n",
    "\n",
    "def cosFit(t, A, omega, phi):\n",
    "    \"\"\"\n",
    "    Function def for a cosine fit\n",
    "    \"\"\"\n",
    "    return A*cos(omega*t+phi)\n",
    "\n",
    "x1a=array(x1list)\n",
    "ta=array(tlist)\n",
    "popt, pcov = curve_fit(cosFit, ta, x1a, p0=(0.707, sqrt(10.0), 0.0))\n",
    "\n",
    "A=popt[0]\n",
    "omega=popt[1]\n",
    "phi=popt[2]\n",
    "\n",
    "print(\"A =>\", A)\n",
    "print(\"omega**2 =>\", omega**2)\n",
    "print(\"phi =>\", phi)\n",
    "\n",
    "title('Fit to find frequency.')\n",
    "xlabel('t')\n",
    "ylabel('x1')\n",
    "plot(ta, cosFit(ta, A, omega, phi), 'b-', label=\"fit\")\n",
    "plot(ta, x1a, 'r.', label='data')\n",
    "legend()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
